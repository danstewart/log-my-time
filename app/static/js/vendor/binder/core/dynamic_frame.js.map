{"version":3,"sources":["../../../../../src/static/js/binder/core/dynamic_frame.js"],"sourcesContent":["import { Controller } from \"../controller.js\";\nimport { parseBoolean, parseDuration } from \"../util.js\";\n\n/*\nThis is the base controller for DynamicFrames\nExtend this and override params() and optionally replaceContent()\n\nThe root HTML node must have a `:url` attribute - this can be relative or absolute\nTo pass params use the attribute format `:param-name`\n\nExample HTML:\n<dynamic-frame :url=\"/some/url\" :param-day=\"Monday\"></dynamic-frame>\n*/\n\n/**\n * @class\n * @name DynamicFrame\n * @namespace DynamicFrame\n * @property url - The URL to fetch\n * @property executeScripts - If true will find and execute scripts in the response body\n * @property mode - The mode to use for adding the response content, either `replace`, `append` or `prepend` (Defaults to `replace`)\n * @property mountPoint - A selector used to find the element to mount to within the element (defaults to the root element)\n * @property autoRefresh - Will call `refresh()` automatically at the specified interval (Intervals are in the format `${num}${unit}` where unit is one of ms, s, m, h: `10s` = 10 seconds)\n * @property delay - An artificial delay applied before displaying the content\n * @property stateKey - An optional key, if specified the frame state will be stored and loaded from the page query string\n * @property contained - If `true` then the frame will be self contained, clicking links and submitting forms will be handled within the frame and **not** impact the surrounding page\n * @example\n *  <dynamic-frame :url=\"/some/url\" :param-day=\"Monday\" :mount-point=\".content\">\n *     <div class=\"content\"></div>\n *  </dynamic-frame>\n */\nclass DynamicFrame extends Controller {\n    /**\n     * Setup the DynamicFrame and do the initial request/load\n     * @memberof! DynamicFrame\n     *\n     */\n    async init() {\n        this.contents = \"\";\n\n        // Keep track of pending requests so we can cancel when updating multiple things\n        this._reqAbort = [];\n\n        this.args.executeScripts = parseBoolean(this.args.executeScripts);\n\n        if (this.args.autoRefresh) {\n            this.setAutoRefresh();\n        }\n\n        if (!this.args.delay) this.args.delay = 0;\n\n        // If we have a stateKey then track and handle the state\n        if (this.args.stateKey) {\n            const handleStateChange = () => {\n                let frameState = this.loadState();\n\n                // Update and refresh\n                if (frameState && Object.keys(frameState).length > 0 && this._internal.frameState !== frameState) {\n                    this.args.url = frameState[`${this.args.stateKey}-url`];\n                    this._internal.frameState = frameState;\n                    this.refresh();\n                }\n            };\n\n            // Initial state load\n            handleStateChange();\n\n            // When the history state changes then reload our state\n            // This is triggered when going back and forward in the browser\n            window.addEventListener(\"popstate\", () => handleStateChange());\n            window.addEventListener(\"pushstate\", () => handleStateChange());\n        }\n\n        this.containFrame(parseBoolean(this.args.contained));\n\n        if (this.renderOnInit) await this.loadContent();\n    }\n\n    /**\n     * Reload the frame content then call `render()`\n     * @memberof! DynamicFrame\n     */\n    async refresh(method = \"get\") {\n        let ok = await this.loadContent(null, method);\n        if (ok) await this.render();\n    }\n\n    /**\n     * Call the base `bind()` and re-find the mountPoint in case it's changed\n     * @memberof! DynamicFrame\n     */\n    bind() {\n        super.bind();\n\n        // Find the mount point\n        if (this.args.mountPoint && typeof this.args.mountPoint === \"string\") {\n            this.mountPoint = this.querySelector(this.args.mountPoint);\n        }\n\n        if (!this.mountPoint) {\n            this.mountPoint = this.root;\n        }\n    }\n\n    /**\n     * Sets an interval to auto call `this.refresh()`\n     * Overwrites previously set refresh intervals\n     * @memberof! DynamicFrame\n     */\n    setAutoRefresh() {\n        const interval = parseDuration(this.args.autoRefresh);\n\n        if (interval === undefined) {\n            console.error(`[${this.tag}] Undefined interval passed to setAutoRefresh`);\n            return;\n        }\n\n        if (this._internal.autoRefreshInterval) {\n            window.clearInterval(this._internal.autoRefreshInterval);\n        }\n\n        this._internal.autoRefreshInterval = window.setInterval(() => this.refresh(), interval);\n    }\n\n    /**\n     * [async] Makes a new request and replaces or appends the response to the mountPoint\n     * Returns true on success\n     * Multiple calls will abort previous requests and return false\n     * @returns boolean - true on success\n     * @memberof! DynamicFrame\n     */\n    async loadContent(e, method = \"get\") {\n        let url = this.endpoint();\n        url.search = new URLSearchParams(this.params());\n\n        // Keep track of all pending requests so we can abort them on duplicate calls\n        this._reqAbort.forEach(controller => controller.abort());\n        this._reqAbort = [];\n\n        const abortController = new AbortController();\n        this._reqAbort.push(abortController);\n\n        let ok = true;\n        const sendReq = async () => {\n            try {\n                let response = await fetch(url, {\n                    signal: abortController.signal,\n                    method: method,\n                });\n\n                // If no content then delete self\n                if (response.status === 204) {\n                    this.destroySelf();\n                    ok = false;\n                    return;\n                }\n\n                let text = await response.text();\n                this.updateContent(text);\n            } catch (err) {\n                console.error(err);\n                ok = false;\n            }\n        };\n\n        await Promise.allSettled([new Promise(resolve => setTimeout(resolve, this.args.delay)), sendReq()]);\n\n        if (ok) {\n            this.saveState();\n            this.bind(); // The new DOM content might need to be bound to the controller\n        }\n\n        return ok;\n    }\n\n    /**\n     * Actually updates the content\n     * This is where the artificial delay is applied\n     * @param content - The content to use\n     * @param mode - replace or append, defaults to `this.args.mode`\n     * @memberof! DynamicFrame\n     */\n    updateContent(content, mode = null) {\n        if (!mode) mode = this.args.mode || \"replace\";\n\n        const template = document.createElement(\"template\");\n        template.innerHTML = content;\n\n        // If we want to execute scripts then go through our template and turn script tags into real scripts\n        if (this.args.executeScripts) {\n            let scripts = template.content.querySelectorAll(\"script\");\n\n            [...scripts].forEach(script => {\n                let newScript = document.createElement(\"script\");\n\n                // Copy all attributes to the new script\n                [...script.attributes].forEach(attr => newScript.setAttribute(attr.name, attr.value));\n\n                // Copy the content of the script tag\n                if (script.innerHTML) newScript.appendChild(document.createTextNode(script.innerHTML));\n\n                // Add the script tag back in\n                script.replaceWith(newScript);\n            });\n        }\n\n        if (mode === \"replace\") {\n            this.mountPoint.replaceChildren(template.content);\n        } else if (mode === \"append\") {\n            this.mountPoint.appendChild(template.content);\n        } else if (mode === \"prepend\") {\n            this.mountPoint.prepend(template.content);\n        }\n\n        this.emit(\"frame-updated\", { from: this, mode: mode });\n    }\n\n    /**\n     * Returns the query string params for the request - expected to be overridden\n     * Handles arrays as duplicated params (ie. a: [1,2] => ?a=1&a=2)\n     * @returns {URLSearchParams}\n     * @memberof! DynamicFrame\n     */\n    params(values = {}) {\n        let params = new URLSearchParams(values);\n\n        // Annoyingly URLSearchParams can't handle array params unless you call .append each time\n        // So find any array params and re-add them manually\n        Object.entries(values).forEach(([key, val]) => {\n            if (Array.isArray(val)) {\n                params.delete(key);\n                val.forEach(item => params.append(key, item));\n            }\n        });\n\n        for (let attr of this.attributes) {\n            if (attr.nodeName.startsWith(\":param-\")) {\n                params.append(attr.nodeName.substring(7), attr.nodeValue);\n            }\n        }\n        return params;\n    }\n\n    /**\n     * Set key/value pairs of params in the element attributes\n     * @param {object} values\n     */\n    setParams(values = {}) {\n        // Wipe out all current attributes\n        for (let attr of this.attributes) {\n            if (attr.nodeName.startsWith(\":param-\")) {\n                this.removeAttribute(attr.nodeName);\n            }\n        }\n\n        // Set the new params\n        Object.entries(values).forEach(([key, val]) => {\n            this.setAttribute(`:param-${key}`, val);\n        });\n    }\n\n    /**\n     * Returns the endpoint to call - from the :url attr on the root element\n     * @returns {string}\n     * @memberof! DynamicFrame\n     */\n    endpoint() {\n        let url = this.args.url;\n\n        if (!this.args.url) {\n            console.error(`${this.tag}: No :url attribute specified`);\n            return;\n        }\n\n        if (!url.startsWith(\"http\")) url = window.location.origin + url;\n        return new URL(url);\n    }\n\n    /**\n     * Load the frame state based on the main page URL query string\n     * @returns {object} The frame state\n     */\n    loadState() {\n        if (!this.args.stateKey) return;\n\n        let qs = window.location.search;\n\n        if (!qs) return;\n        qs = qs.substring(1);\n        let qsParts = Object.fromEntries(qs.split(\"&\").map(part => part.split(\"=\")));\n\n        let frameState = {};\n        let params = {};\n        for (let [key, value] of Object.entries(qsParts)) {\n            if (key.startsWith(this.args.stateKey + \"-\")) {\n                if (key.startsWith(this.args.stateKey + \"-param-\")) {\n                    params[key.replace(this.stateKey + \"-param-\", \"\")] = value;\n                }\n\n                frameState[key] = value;\n            }\n        }\n\n        // Update our params\n        this.setParams(params);\n\n        return frameState;\n    }\n\n    /**\n     * Loads a URL into the frame by updating the url and param attributes and then reload\n     * @param {*} url\n     */\n    loadUrl(url, method = \"get\") {\n        let [origin, query] = url.split(\"?\");\n        if (!query) query = \"\";\n\n        if (query) {\n            const params = Object.fromEntries(query.split(\"&\").map(part => part.split(\"=\")));\n            this.setParams(params);\n        }\n\n        this.args.url = origin;\n        this.refresh(method);\n    }\n\n    /**\n     * Save the frame state to the outer page URL query string and add to history\n     * Only saves if the state has changed\n     */\n    saveState() {\n        // If no stateKey then we can't save the state\n        if (!this.args.stateKey) return;\n\n        // Get the main page query string\n        let mainPageQs = Object.fromEntries(new URLSearchParams(window.location.search));\n\n        // Strip out any params that belong to this frame\n        // We will re-add them below\n        for (const key of Object.keys(mainPageQs)) {\n            if (key.startsWith(`${this.args.stateKey}-`)) {\n                delete mainPageQs[key];\n            }\n        }\n\n        // Build our frame state object\n        let frameState = {};\n        frameState[`${this.args.stateKey}-url`] = this.args.url.replace(window.location.origin, \"\");\n\n        // Add the params for this frame\n        for (const [key, value] of this.params()) {\n            frameState[`${this.args.stateKey}-param-${key}`] = value;\n        }\n\n        // Merge our frame state into the page params\n        mainPageQs = { ...mainPageQs, ...frameState };\n\n        // If our state changed then update the main page URL and add to history\n        if (this._internal.frameState !== frameState) {\n            const qs = Object.entries(mainPageQs)\n                .map(part => `${part[0]}=${part[1]}`)\n                .join(\"&\");\n\n            window.history.pushState(qs, \"\", `?${qs}`);\n            this._internal.frameState = frameState;\n        }\n    }\n\n    /**\n     * Makes the frame self contained\n     * Clicking any links or submitting any forms will only impact the frame, not the surrounding page\n     * @param {bool} containAll Whether to automatically contain all `a` and `form` elements\n     *                          If not set then it will be opt in per element.\n     */\n    containFrame(containAll = false) {\n        // Capture all clicks and if it was on an <a> tag load the href within the frame\n        this.addEventListener(\"click\", e => {\n            let target = e.target || e.srcElement;\n\n            if (target.tagName === \"A\" && this.belongsToController(target)) {\n                if (!containAll && !target.hasAttribute(\":contained\")) {\n                    return;\n                }\n\n                e.preventDefault();\n                const href = target.getAttribute(\"href\");\n                this.loadUrl(href);\n            }\n        });\n\n        // Intercept form submits\n        // To do this we need to submit the form ourselves\n        // Aims to have near-full feature parity with regular HTML forms\n        // We do not support the `target` attribute or the `method=\"dialog\"` value\n        // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\n        this.addEventListener(\"submit\", async e => {\n            if (!containAll && !e.target.hasAttribute(\":contained\")) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            const method = e.target.getAttribute(\"method\") || \"GET\";\n            const action = e.target.getAttribute(\"action\") || \"/\";\n            const encoding = e.target.getAttribute(\"enctype\") || \"application/x-www-form-urlencoded\";\n            const skipValidation = e.target.getAttribute(\"novalidate\") !== undefined;\n\n            // Base HTML5 validation\n            if (!skipValidation && !e.target.checkValidity()) {\n                return;\n            }\n\n            // Build the form data to send\n            const formData = new FormData(e.target);\n            let params = new URLSearchParams();\n            for (const pair of formData) {\n                params.append(pair[0], pair[1]);\n            }\n\n            if (method.toUpperCase() == \"POST\") {\n                let request = {\n                    method: \"POST\",\n                };\n\n                if (encoding === \"application/x-www-form-urlencoded\") {\n                    request.body = params;\n                    request.headers = {\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    };\n                } else {\n                    // If sending as multipart then we omit the content-type\n                    let multipartData = new FormData();\n                    for (const pair of formData) {\n                        multipartData.append(pair[0], pair[1]);\n                    }\n\n                    request.body = multipartData;\n                }\n                let response = await fetch(action, request);\n                // Show the response body\n                this.updateContent(await response.text());\n            } else if (method.toUpperCase() == \"GET\") {\n                const query = Object.fromEntries(new URLSearchParams(formData));\n                this.setParams(query);\n                this.args.url = action;\n                this.refresh();\n            }\n\n            return false;\n        });\n    }\n\n    /**\n     * Remove self from DOM and remove state from query string\n     */\n    destroySelf() {\n        this.parentElement.removeChild(this);\n\n        if (this.args.stateKey) {\n            // Get main page query string\n            let qs = window.location.search;\n            qs = qs.substring(1);\n            if (!qs) return;\n\n            // Remove any parts that belong to this frame\n            let qsParts = Object.fromEntries(qs.split(\"&\").map(part => part.split(\"=\")));\n            for (const [key, _value] of Object.entries(qsParts)) {\n                if (key.startsWith(this.args.stateKey + \"-\")) {\n                    delete qsParts[key];\n                }\n            }\n\n            // Back to string and save\n            qs = Object.entries(qsParts)\n                .map(part => `${part[0]}=${part[1]}`)\n                .join(\"&\");\n\n            window.history.pushState(qs, \"\", `?${qs}`);\n        }\n    }\n}\n\nexport { DynamicFrame };\n"],"names":["Controller","parseBoolean","parseDuration","DynamicFrame","init","contents","_reqAbort","args","executeScripts","autoRefresh","setAutoRefresh","delay","stateKey","handleStateChange","frameState","loadState","Object","keys","length","_internal","url","refresh","window","addEventListener","containFrame","contained","renderOnInit","loadContent","method","ok","render","bind","mountPoint","querySelector","root","interval","undefined","console","error","tag","autoRefreshInterval","clearInterval","setInterval","e","endpoint","search","URLSearchParams","params","forEach","controller","abort","abortController","AbortController","push","sendReq","response","fetch","signal","status","destroySelf","text","updateContent","err","Promise","allSettled","resolve","setTimeout","saveState","content","mode","template","document","createElement","innerHTML","scripts","querySelectorAll","script","newScript","attributes","attr","setAttribute","name","value","appendChild","createTextNode","replaceWith","replaceChildren","prepend","emit","from","values","entries","key","val","Array","isArray","delete","item","append","nodeName","startsWith","substring","nodeValue","setParams","removeAttribute","location","origin","URL","qs","qsParts","fromEntries","split","map","part","replace","loadUrl","query","mainPageQs","join","history","pushState","containAll","target","srcElement","tagName","belongsToController","hasAttribute","preventDefault","href","getAttribute","stopPropagation","action","encoding","skipValidation","checkValidity","formData","FormData","pair","toUpperCase","request","body","headers","multipartData","parentElement","removeChild","_value"],"mappings":"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"}