{"version":3,"sources":["../../../../../src/static/js/binder/core/dynamic_frame.js"],"sourcesContent":["import { Controller } from \"../controller.js\";\nimport { parseDuration, parseBoolean } from \"../util.js\";\n\n/*\nThis is the base controller for DynamicFrames\nExtend this and override params() and optionally replaceContent()\n\nThe root HTML node must have a `:url` attribute - this can be relative or absolute\nTo pass params use the attribute format `:param-name`\n\nExample HTML:\n<dynamic-frame :url=\"/some/url\" :param-day=\"Monday\"></dynamic-frame>\n*/\n\n/**\n * @class\n * @name DynamicFrame\n * @namespace DynamicFrame\n * @property url - The URL to fetch\n * @property executeScripts - If true will find and execute scripts in the response body\n * @property mode - The mode to use for adding the response content, either `replace`, `append` or `prepend` (Defaults to `replace`)\n * @property mountPoint - A selector used to find the element to mount to within the element (defaults to the root element)\n * @property autoRefresh - Will call `refresh()` automatically at the specified interval (Intervals are in the format `${num}${unit}` where unit is one of ms, s, m, h: `10s` = 10 seconds)\n * @property delay - An artificial delay applied before displaying the content\n * @property stateKey - An optional key, if specified the frame state will be stored and loaded from the page query string\n * @property contained - If `true` then the frame will be self contained, clicking links and submitting forms will be handled within the frame and **not** impact the surrounding page\n * @example\n *  <dynamic-frame :url=\"/some/url\" :param-day=\"Monday\" :mount-point=\".content\">\n *     <div class=\"content\"></div>\n *  </dynamic-frame>\n */\nclass DynamicFrame extends Controller {\n    /**\n     * Setup the DynamicFrame and do the initial request/load\n     * @memberof! DynamicFrame\n     *\n     */\n    async init() {\n        this.contents = \"\";\n\n        // Keep track of pending requests so we can cancel when updating multiple things\n        this._reqAbort = [];\n\n        this.args.executeScripts = parseBoolean(this.args.executeScripts);\n\n        if (this.args.autoRefresh) {\n            this.setAutoRefresh();\n        }\n\n        if (!this.args.delay) this.args.delay = 0;\n\n        // If we have a stateKey then track and handle the state\n        if (this.args.stateKey) {\n            this.loadState();\n\n            const handleStateChange = () => {\n                let qs = this.loadState();\n\n                if (this._internal.currentQs !== qs) {\n                    this._internal.currentQs = qs;\n                    this.refresh();\n                }\n            };\n\n            // When the history state changes then reload our state\n            // This is triggered when going back and forward in the browser\n            window.addEventListener(\"popstate\", () => handleStateChange());\n            window.addEventListener(\"pushstate\", () => handleStateChange());\n        }\n\n        if (parseBoolean(this.args.contained)) {\n            this.containFrame();\n        }\n\n        if (this.renderOnInit) await this.loadContent();\n    }\n\n    /**\n     * Reload the frame content then call `render()`\n     * @memberof! DynamicFrame\n     */\n    async refresh() {\n        await this.loadContent();\n        await this.render();\n    }\n\n    /**\n     * Call the base `bind()` and re-find the mountPoint in case it's changed\n     * @memberof! DynamicFrame\n     */\n    bind() {\n        super.bind();\n\n        // Find the mount point\n        if (this.args.mountPoint && typeof this.args.mountPoint === \"string\") {\n            this.mountPoint = this.querySelector(this.args.mountPoint);\n        }\n\n        if (!this.mountPoint) {\n            this.mountPoint = this.root;\n        }\n    }\n\n    /**\n     * Sets an interval to auto call `this.refresh()`\n     * Overwrites previously set refresh intervals\n     * @memberof! DynamicFrame\n     */\n    setAutoRefresh() {\n        const interval = parseDuration(this.args.autoRefresh);\n\n        if (interval === undefined) {\n            console.error(`[${this.tag}] Undefined interval passed to setAutoRefresh`);\n            return;\n        }\n\n        if (this._internal.autoRefreshInterval) {\n            window.clearInterval(this._internal.autoRefreshInterval);\n        }\n\n        this._internal.autoRefreshInterval = window.setInterval(() => this.refresh(), interval);\n    }\n\n    /**\n     * [async] Makes a new request and replaces or appends the response to the mountPoint\n     * Returns true on success\n     * Multiple calls will abort previous requests and return false\n     * @returns boolean - true on success\n     * @memberof! DynamicFrame\n     */\n    async loadContent(e) {\n        let url = this.endpoint();\n        url.search = new URLSearchParams(this.params());\n\n        // Keep track of all pending requests so we can abort them on duplicate calls\n        this._reqAbort.forEach(controller => controller.abort());\n        this._reqAbort = [];\n\n        const abortController = new AbortController();\n        this._reqAbort.push(abortController);\n\n        let ok = true;\n        const sendReq = async () => {\n            try {\n                let response = await fetch(url, { signal: abortController.signal });\n                let text = await response.text();\n                this.updateContent(text);\n            } catch (err) {\n                console.error(err);\n                ok = false;\n            }\n        };\n\n        await Promise.allSettled([new Promise(resolve => setTimeout(resolve, this.args.delay)), sendReq()]);\n        this.saveState();\n        this.bind(); // The new DOM content might need to be bound to the controller\n\n        return ok;\n    }\n\n    /**\n     * Actually updates the content\n     * This is where the artificial delay is applied\n     * @param content - The content to use\n     * @param mode - replace or append, defaults to `this.args.mode`\n     * @memberof! DynamicFrame\n     */\n    updateContent(content, mode = null) {\n        if (!mode) mode = this.args.mode || \"replace\";\n\n        const template = document.createElement(\"template\");\n        template.innerHTML = content;\n\n        // If we want to execute scripts then go through our template and turn script tags into real scripts\n        if (this.args.executeScripts) {\n            let scripts = template.content.querySelectorAll(\"script\");\n\n            [...scripts].forEach(script => {\n                let newScript = document.createElement(\"script\");\n\n                // Copy all attributes to the new script\n                [...script.attributes].forEach(attr => newScript.setAttribute(attr.name, attr.value));\n\n                // Copy the content of the script tag\n                if (script.innerHTML) newScript.appendChild(document.createTextNode(script.innerHTML));\n\n                // Add the script tag back in\n                script.replaceWith(newScript);\n            });\n        }\n\n        if (mode === \"replace\") {\n            this.mountPoint.replaceChildren(template.content);\n        } else if (mode === \"append\") {\n            this.mountPoint.appendChild(template.content);\n        } else if (mode === \"prepend\") {\n            this.mountPoint.prepend(template.content);\n        }\n\n        this.emit(\"frame-updated\", { from: this, mode: mode });\n    }\n\n    /**\n     * Returns the query string params for the request - expected to be overridden\n     * Handles arrays as duplicated params (ie. a: [1,2] => ?a=1&a=2)\n     * @returns {URLSearchParams}\n     * @memberof! DynamicFrame\n     */\n    params(values = {}) {\n        let params = new URLSearchParams(values);\n\n        // Annoyingly URLSearchParams can't handle array params unless you call .append each time\n        // So find any array params and re-add them manually\n        Object.entries(values).forEach(([key, val]) => {\n            if (Array.isArray(val)) {\n                params.delete(key);\n                val.forEach(item => params.append(key, item));\n            }\n        });\n\n        for (let attr of this.attributes) {\n            if (attr.nodeName.startsWith(\":param-\")) {\n                params.append(attr.nodeName.substring(7), attr.nodeValue);\n            }\n        }\n        return params;\n    }\n\n    /**\n     * Set key/value pairs of params in the element attributes\n     * @param {object} values\n     */\n    setParams(values = {}) {\n        // Wipe out all current attributes\n        for (let attr of this.attributes) {\n            if (attr.nodeName.startsWith(\":param-\")) {\n                this.removeAttribute(attr.nodeName);\n            }\n        }\n\n        // Set the new params\n        Object.entries(values).forEach(([key, val]) => {\n            this.setAttribute(`:param-${key}`, val);\n        });\n    }\n\n    /**\n     * Returns the endpoint to call - from the data-url attr on the root element\n     * @returns {string}\n     * @memberof! DynamicFrame\n     */\n    endpoint() {\n        let url = this.args.url;\n\n        if (!this.args.url) {\n            console.error(`${this.tag}: No :url attribute specified`);\n            return;\n        }\n\n        if (!url.startsWith(\"http\")) url = window.location.origin + url;\n        return new URL(url);\n    }\n\n    /**\n     * Load the frame state based on the URL query string\n     */\n    loadState() {\n        if (!this.args.stateKey) return;\n\n        let qs = window.location.search;\n        if (!qs) return;\n\n        console.log(\"Loading state\");\n\n        qs = qs.substring(1);\n        let qsParts = Object.fromEntries(qs.split(\"&\").map(part => part.split(\"=\")));\n\n        console.log(qsParts);\n        console.log(`Expected key: ${this.args.stateKey}-url`);\n        console.log(`Found: ` + qsParts[this.args.stateKey + \"-url\"]);\n\n        if (qsParts[`${this.args.stateKey}-url`]) {\n            this.args.url = qsParts[`${this.args.stateKey}-url`];\n            delete qsParts[`${this.args.stateKey}-url`];\n        }\n\n        console.log(this.args.url);\n\n        // TODO: Rewrite this to use `setParams`\n\n        // Wipe out the default param attributes on this frame as we add the correct ones below\n        for (let attr of this.attributes) {\n            if (attr.nodeName.startsWith(\":param-\")) {\n                this.removeAttribute(attr.nodeName);\n            }\n        }\n\n        for (let [key, value] of Object.entries(qsParts)) {\n            // Ignore other state keys\n            // TODO: It might be better to make the state keys easier to identify\n            // I can see these two cases being used for real parameters, in which case we drop them\n            if (key.endsWith(\"-url\")) continue;\n            if (!key.startsWith(this.args.stateKey)) continue;\n\n            key = key.replace(`${this.args.stateKey}-param-`, \"\");\n            this.setAttribute(`:param-${key}`, value);\n        }\n\n        return qs;\n    }\n\n    /**\n     * Loads a URL into the frame by updating the url and param attributes and then reload\n     * @param {*} url\n     */\n    loadUrl = url => {\n        let [origin, query] = url.split(\"?\");\n        if (!query) query = \"\";\n\n        if (query) {\n            const params = Object.fromEntries(query.split(\"&\").map(part => part.split(\"=\")));\n            this.setParams(params);\n        }\n\n        this.args.url = origin;\n        this.refresh();\n    };\n\n    /**\n     * Save the frame state to the URL query string\n     * Only saves if the state has changed\n     */\n    saveState() {\n        if (!this.args.stateKey) return;\n\n        let qsParts = Object.fromEntries(new URLSearchParams(window.location.search));\n        qsParts[`${this.args.stateKey}-url`] = this.args.url.replace(window.location.origin, \"\");\n\n        // Strip out any params that belong to this frame\n        // We re-add them below\n        for (const key of Object.keys(qsParts)) {\n            if (key.startsWith(`${this.args.stateKey}-param-`)) {\n                delete qsParts[key];\n            }\n        }\n\n        // Add the params for this frame\n        for (const [key, value] of this.params()) {\n            qsParts[`${this.args.stateKey}-param-${key}`] = value;\n        }\n\n        const qs = Object.entries(qsParts)\n            .map(part => `${part[0]}=${part[1]}`)\n            .join(\"&\");\n\n        if (this._internal.currentQs !== qs) {\n            window.history.pushState(qs, \"\", `?${qs}`);\n            this._internal.currentQs = qs;\n        }\n    }\n\n    /**\n     * Makes the frame self contained\n     * Clicking any links or submitting any forms will only impact the frame, not the surrounding page\n     */\n    containFrame() {\n        // Capture all clicks and if it was on an <a> tag load the href within the frame\n        this.addEventListener(\"click\", e => {\n            let target = e.target || e.srcElement;\n\n            if (target.tagName === \"A\" && this.belongsToController(target)) {\n                e.preventDefault();\n                const href = target.getAttribute(\"href\");\n                this.loadUrl(href);\n            }\n        });\n\n        // Intercept form submits\n        // To do this we need to submit the form ourselves\n        // Aims to have near-full feature parity with regular HTML forms\n        // We do not support the `target` attribute or the `method=\"dialog\"` value\n        // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\n        this.addEventListener(\"submit\", async e => {\n            e.preventDefault();\n\n            const method = e.target.getAttribute(\"method\") || \"GET\";\n            const action = e.target.getAttribute(\"action\") || \"/\";\n            const encoding = e.target.getAttribute(\"enctype\") || \"application/x-www-form-urlencoded\";\n            const skipValidation = e.target.getAttribute(\"novalidate\") !== undefined;\n\n            // Base HTML5 validation\n            if (!skipValidation && !e.target.checkValidity()) {\n                console.warn(\"Form is not valid\");\n                return;\n            }\n\n            // Build the form data to send\n            const formData = new FormData(e.target);\n            let params = new URLSearchParams();\n            for (const pair of formData) {\n                params.append(pair[0], pair[1]);\n            }\n\n            if (method.toUpperCase() == \"POST\") {\n                let response = await fetch(action, {\n                    method: \"POST\",\n                    body: params,\n                    headers: {\n                        \"Content-Type\": encoding,\n                    },\n                });\n\n                if (response.redirected) {\n                    // If we have a redirect then follow it\n                    this.loadUrl(response.url);\n                } else {\n                    // Otherwise show the response body\n                    this.innerHTML = await response.text();\n                }\n            } else if (method.toUpperCase() == \"GET\") {\n                const query = Object.fromEntries(new URLSearchParams(formData));\n                this.setParams(query);\n                this.args.url = action;\n                this.refresh();\n            }\n\n            return false;\n        });\n    }\n}\n\nexport { DynamicFrame };\n"],"names":["Controller","parseDuration","parseBoolean","DynamicFrame","init","contents","_reqAbort","args","executeScripts","autoRefresh","setAutoRefresh","delay","stateKey","loadState","handleStateChange","qs","_internal","currentQs","refresh","window","addEventListener","contained","containFrame","renderOnInit","loadContent","render","bind","mountPoint","querySelector","root","interval","undefined","console","error","tag","autoRefreshInterval","clearInterval","setInterval","e","url","endpoint","search","URLSearchParams","params","forEach","controller","abort","abortController","AbortController","push","ok","sendReq","response","fetch","signal","text","updateContent","err","Promise","allSettled","resolve","setTimeout","saveState","content","mode","template","document","createElement","innerHTML","scripts","querySelectorAll","script","newScript","attributes","attr","setAttribute","name","value","appendChild","createTextNode","replaceWith","replaceChildren","prepend","emit","from","values","Object","entries","key","val","Array","isArray","delete","item","append","nodeName","startsWith","substring","nodeValue","setParams","removeAttribute","location","origin","URL","log","qsParts","fromEntries","split","map","part","endsWith","replace","keys","join","history","pushState","target","srcElement","tagName","belongsToController","preventDefault","href","getAttribute","loadUrl","method","action","encoding","skipValidation","checkValidity","warn","formData","FormData","pair","toUpperCase","body","headers","redirected","query"],"mappings":"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"}