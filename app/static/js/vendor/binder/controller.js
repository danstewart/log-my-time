import{kebabToCamel,permutations,parseDuration}from'./util.js';function _classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver)){throw new TypeError("attempted to get private field on non-instance")}return fn}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}const makeController=(base=HTMLElement,extendTag=null)=>{const CoreController=function(){var _findRenderableElements=new WeakSet(),_bindArgs=new WeakSet(),_bindEvents=new WeakSet(),_bindDataValues=new WeakSet(),_getElementType=new WeakSet(),_belongsToController=new WeakSet();class _class extends base{attributeChangedCallback(name,oldValue,newValue){let handler=name.replace(/^data-/,'');handler=handler.replace(/^aria-/,'');handler=kebabToCamel(handler);handler=`set${handler.charAt(0).toUpperCase()}${handler.slice(1)}`;if(handler in this&& typeof this[handler]==="function"){this[handler](oldValue,newValue)}}emit(eventName,detail={},config={}){window.dispatchEvent(new CustomEvent(eventName,_objectSpread({bubbles:true,cancelable:true,composed:true,detail:detail},config)))}listenFor(eventName,callback){window.addEventListener(eventName,e=>callback(e))}rebind(){this.__events__.forEach(e=>e.el.removeEventListener(e.eventType,e.event));this.__events__=[];_classPrivateMethodGet(this,_bindEvents,bindEvents).call(this);_classPrivateMethodGet(this,_bindArgs,bindArgs).call(this);_classPrivateMethodGet(this,_bindDataValues,bindDataValues).call(this)}setAutoRender(interval){if(interval===undefined){console.error(`[${this.localName}] Undefined interval passed to setAutoRender`);return}if(this.__internal__.autoRenderInterval){window.clearInterval(this.__internal__.autoRenderInterval)}this.__internal__.autoRenderInterval=window.setInterval(()=>this.render(),interval)}init(args){}connectedCallback(){if(!this.isConnected)return;this.rebind();this.init(this.args);if(this.autoRender){const interval=parseDuration(this.autoRender);this.setAutoRender(interval)}if(this.renderOnInit==="true"){this.render()}}getTag(tag){console.warn("[getTag] Deprecated, use querySelector instead");return this.querySelector(`[data-tag="${tag}"]`)||this.querySelector(`[\\:tag="${tag}"]`)}getTagAll(tag){console.warn("[getTagAll] Deprecated, use querySelectorAll instead");return[...this.querySelectorAll(`[data-tag="${tag}"]`),...this.querySelectorAll(`[\\:tag="${tag}"]`),]}render(){if(this.renderSelf&& typeof this.renderSelf==='function'){this.renderSelf()}_classPrivateMethodGet(this,_findRenderableElements,findRenderableElements).call(this).forEach(el=>{let template=el.getAttribute('_template');if(!template){template=el.innerText;el.setAttribute('_template',template)}const evalMode=el.hasAttribute(`@render.eval`);let replacerRegex=/\$\{(.*?)\}/g;template.replace(replacerRegex,(replacer,key)=>{if(evalMode){const fn=new Function(`return ${key}`);template=template.replace(replacer,fn.call(this))}else{let pos=null;key.split(/[\.\[\]]/).filter(item=>!!item).forEach(part=>{part=part.replace(/["']/g,'');part=part.replace(/\(\)/g,'');if(pos==null&&part==="this"){pos=this;return}if(pos&&part in pos){pos=pos[part]}else{pos=null;return}});if(pos==null)pos="";if(typeof pos==="function")pos=pos.call(this);template=template.replace(replacer,pos.toString()||'')}});el.innerHTML=template})}constructor(args){super();_findRenderableElements.add(this);_bindArgs.add(this);_bindEvents.add(this);_bindDataValues.add(this);_getElementType.add(this);_belongsToController.add(this);this.__internal__={};this.root=this;this.args=args;this.__events__=[];if(this.innerHTML.trim()==="")this.innerHTML="<self></self>";this.self=this.querySelector("self");this.setAttribute("data-controller",this.localName);this.renderOnInit=this.renderOnInit||"true";this.template=this.root.querySelector("template");if(this.template){this.content=this.template.content.cloneNode(true);if(this.template.hasAttribute(":use-shadow")){this.attachShadow({mode:"open"}).appendChild(this.content.cloneNode(true));this.root=this.shadowRoot;this.hasShadow=true}else{this.appendChild(this.content.cloneNode(true));this.hasShadow=false}}}}_defineProperty(_class,"__extendTag__",extendTag);_defineProperty(_class,"observedAttributes",[]);function findRenderableElements(){return[...this.root.querySelectorAll(`[\\@render]`),...this.root.querySelectorAll(`[\\@render\\.eval]`),].filter(el=>_classPrivateMethodGet(this,_belongsToController,belongsToController).call(this,el))}function bindArgs(){this.getAttributeNames().forEach(attr=>{const value=this.getAttribute(attr);const key=kebabToCamel(attr).replace(':','');this[key]=value})}function bindEvents(){const eventTypes=['click','change','mouseover','mouseout','keydown','keyup','load'];const modifiers=["",...permutations([".prevent",".eval"],true)];const bindEvent=(el,eventType,modifier)=>{const value=el.getAttribute(`@${eventType}${modifier}`);const action=value.replace("this.","").replace("()","");const callable=event=>{if(modifier.includes('.prevent'))event.preventDefault();if(modifier.includes('.eval')){const fn=new Function(`${value}`);fn.call(this)}else{this[action](event)}};el.addEventListener(eventType,callable);this.__events__.push({el:el,event:callable,eventType:eventType})};eventTypes.forEach(eventType=>{modifiers.forEach(modifier=>{const escapedModifier=modifier.replace(/\./g,"\\.");if(this.root.hasAttribute(`@${eventType}${modifier}`)){bindEvent(this.root,eventType,modifier)}this.root.querySelectorAll(`[\\@${eventType}${escapedModifier}]`).forEach(el=>{if(!_classPrivateMethodGet(this,_belongsToController,belongsToController).call(this,el))return;bindEvent(el,eventType,modifier)})})})}function bindDataValues(){const instance1=this;const tagToEvent={'input|text':'keyup','default':'change'};const handlers={'input|checkbox':(instance,varName,e)=>{if(!instance[varName])instance[varName]=[];if(e.target.checked){instance[varName].push(e.target.value)}else{instance[varName]=instance[varName].filter(item=>item!==e.target.value)}},'select':(instance,varName,e)=>{if(e.target.getAttribute('multiple')!==null){instance[varName]=Array.from(e.target.selectedOptions).map(item=>item.value)}else{instance[varName]=e.target.value}},'default':(instance,varName,e)=>instance[varName]=e.target.value};const bindData=(el,modifier)=>{const elType=_classPrivateMethodGet(this,_getElementType,getElementType).call(this,el);const eventType=tagToEvent[elType]||tagToEvent.default;el.addEventListener(eventType,e=>{const varName=el.getAttribute(`@bind${modifier}`).replace("this.","");const handler=handlers[elType]||handlers.default;handler(instance1,varName,e);if(modifiers.includes('.render'))instance1.render()})};const modifiers=["",...permutations([".render"],true)];modifiers.forEach(modifier=>{if(this.root.hasAttribute(`@bind${modifier}`)){bindData(this.root,modifier)}const escapedModifier=modifier.replace(/\./g,"\\.");this.root.querySelectorAll(`[\\@bind${escapedModifier}]`).forEach(el=>{if(!_classPrivateMethodGet(this,_belongsToController,belongsToController).call(this,el))return;bindData(el,modifier)})})}function getElementType(el){if(el.tagName.toLowerCase()==='input'){return[el.tagName,el.type].map(item=>item.toLowerCase()).join('|')}return el.tagName.toLowerCase()}function belongsToController(el){if(this.hasShadow)return true;const closestController=el.closest(`[data-controller]`);if(closestController==null)return false;if(closestController.getAttribute('data-controller')!==this.localName)return false;return true}return _class}();return CoreController};const Controller=makeController();export{makeController,Controller}
