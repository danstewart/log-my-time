{"version":3,"sources":["../../../../src/static/js/binder/register.js"],"sourcesContent":["import { pascalToKebab } from \"./util.js\";\n\n/**\n * Register a controller (or multiple controllers)\n *\n * Example\n * ```js\n * registerControllers(MyController, MyOtherController);\n * ```\n *\n * ```js\n * registerControllers(\n *  MyController,\n *  [ MyOtherController, { name: \"my-custom-controller\" } ],\n *  [ MyOtherOtherController ],\n * )\n * ```\n * @param  {...any} controllers\n */\nconst registerControllers = (...controllers) => {\n    // First find all undefined elements and assume they are custom elements\n    // We can then add the `data-controller` attribute to them\n    // This makes it easy for us to find which controller a given DOM element belongs to\n    // We also set the `data-controller` attr during the `connectedCallback` so any elements defined later will still work\n    const allUndefinedElements = [...document.querySelectorAll(\":not(:defined)\")];\n    allUndefinedElements.forEach(el => el.setAttribute(\"data-controller\", el.localName));\n\n    for (let controller of controllers) {\n        let config = {};\n        if (Array.isArray(controller)) {\n            [controller, config = {}] = controller;\n        }\n\n        const controllerName = controller.name;\n        const controllerTag = config && config.name ? config.name : pascalToKebab(controllerName);\n\n        if (window.customElements.get(controllerTag)) {\n            console.warn(`Controller \"${controllerTag}\" is already registered, skipping...`);\n            return;\n        }\n\n        // All custom elements required a hyphenated tag name\n        if (!controllerTag.includes(\"-\")) {\n            console.error(`[${controllerName}] Controller tag name must contain a hyphen but got <${controllerTag}>`);\n        }\n\n        // Create an anonymous class here to avoid name clashes when using the bare controller with a custom name\n        window.customElements.define(controllerTag, controller, {});\n    }\n};\n\nexport { registerControllers };\n"],"names":["pascalToKebab","registerControllers","controllers","allUndefinedElements","document","querySelectorAll","forEach","el","setAttribute","localName","controller","config","Array","isArray","controllerName","name","controllerTag","window","customElements","get","console","warn","includes","error","define"],"mappings":"AAAA,OAASA,aAAa,KAAQ,WAAW,AAAC,AAmB1C,OAAMC,mBAAmB,CAAG,CAAIC,GAAAA,WAAW,GAAK,CAK5C,MAAMC,oBAAoB,CAAG,IAAIC,QAAQ,CAACC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,AAAC,AAC9EF,CAAAA,oBAAoB,CAACG,OAAO,CAACC,EAAE,EAAIA,EAAE,CAACC,YAAY,CAAC,iBAAiB,CAAED,EAAE,CAACE,SAAS,CAAC,CAAC,AAEpF,KAAK,IAAIC,UAAU,IAAIR,WAAW,CAAE,CAChC,IAAIS,MAAM,CAAG,EAAE,AAAC,AAChB,IAAIC,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,CAAE,CAC3B,CAACA,UAAU,CAAEC,MAAM,CAAG,EAAE,CAAC,CAAGD,UAAU,CACzC,AAED,MAAMI,cAAc,CAAGJ,UAAU,CAACK,IAAI,AAAC,AACvC,OAAMC,aAAa,CAAGL,MAAM,EAAIA,MAAM,CAACI,IAAI,CAAGJ,MAAM,CAACI,IAAI,CAAGf,aAAa,CAACc,cAAc,CAAC,AAAC,AAE1F,IAAIG,MAAM,CAACC,cAAc,CAACC,GAAG,CAACH,aAAa,CAAC,CAAE,CAC1CI,OAAO,CAACC,IAAI,CAAC,CAAC,YAAY,EAAEL,aAAa,CAAC,oCAAoC,CAAC,CAAC,AAChF,OAAO,CACV,AAGD,GAAI,CAACA,aAAa,CAACM,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC9BF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,EAAET,cAAc,CAAC,qDAAqD,EAAEE,aAAa,CAAC,CAAC,CAAC,CAAC,CAC5G,AAGDC,MAAM,CAACC,cAAc,CAACM,MAAM,CAACR,aAAa,CAAEN,UAAU,CAAE,EAAE,CAAC,CAC9D,CACJ,AAAC,AAEF,QAAST,mBAAmB,CAAG"}